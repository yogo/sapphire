-@schema_cv_hash={}
-@collection.schema.each do |s|
  -link_hash={}
  -if s.controlled_vocabulary_id
  -@schema_cv_hash[s.id] =Yogo::Collection::Property.get(s.controlled_vocabulary_id).data_collection
    -s.data_collection.items.each do |i|
      -link_hash = link_hash.merge({i[s.name] => @schema_cv_hash[s.id].items.first("field_#{s.controlled_vocabulary_id.to_s.gsub('-','_')}".to_sym=>i[s.name])})
    -@schema_cv_hash[s.name]=link_hash
    
%table.table
  %tr
    %th Edit
    %th History
    %th Delete
    %th Created At
    %th Updated At
    - collection.schema.each do |s|
      %th= s.name
    %th File
  - items.each do |i|
    %tr{:class => cycle('odd','even')}
      %td= link_to(image_tag("web-app-theme/icons/table_edit.png"), edit_project_collection_item_path(params[:project_id],collection,i))
      %td=link_to(image_tag("web-app-theme/icons/time_go.png"), project_collection_item_path(params[:project_id],collection,i))
      %td=link_to("delete", project_collection_item_path(params[:project_id],collection,i), :method=>:delete, "data-confirm"=>"Are you sure you wish to delete this Item?")
      %td= i.created_at.strftime("%B %d, %Y %I:%M:%S %p")
      %td= i.updated_at.strftime("%B %d, %Y %I:%M:%S %p")
      - collection.schema.each do |s|
        -if s.controlled_vocabulary_id  
          -if @schema_cv_hash[s.name][i[s.name]]
            %td
              %a{:href=>"#", :onClick=>"return showDialog('#{project_collection_item_controlled_vocabulary_term_path(@schema_cv_hash[s.id].project_id,@schema_cv_hash[s.id],@schema_cv_hash[s.name][i[s.name]])}')"}
                = i[s.name]
          -else
            %td{:class =>'cv_error'}= i[s.name]
        -elsif s.associated_schema     
          %td
            -unless i[s.name].nil?
              %a{:href=>"#", :onClick=>"return showDialog('#{project_collection_item_controlled_vocabulary_term_path(s.associated_schema.data_collection.project_id,s.associated_schema.data_collection.id,i[s.name])}')"}
                =s.associated_schema.data_collection.items.get(i[s.name])[s.associated_schema.name]
              %a{:href=>"#", :onClick=>"return showDialog('#{edit_project_collection_item_path(s.associated_schema.data_collection.project_id,s.associated_schema.data_collection.id,i[s.name])}')"}
                =image_tag("web-app-theme/icons/table_edit.png")
        -else
          %td= i[s.name]
      %td
        %a{:href => i.file.to_s}= i.original_filename
        
:javascript
  function showDialog(url){
     $("#CV_info").html('<iframe id="modalIframeId" width="100%" height="100%" marginWidth="0" marginHeight="0" frameBorder="0" scrolling="auto"/>').dialog("open");
     $("#modalIframeId").attr("src",url);
     return false;
  }

  $(document).ready(function() {
     $("#CV_info").dialog({
             autoOpen: false,
             modal: true,
             height: 500,
             width: 500
         });
  });
  
#CV_info{:title=>"Controlled Vocabulary" }