
%strong Quick Add
= form_for("item", @item, :url => project_collection_items_path(@project, collection),  :html => {"multipart" => true, "data-ajax"=> false, :class => 'form-inline', :id => 'QAcreateItemForm', 'data-focus-on' => "input:visible:first"}) do |f| 
  - collection.schema.each do |field|
    -if field.controlled_vocabulary
      = f.select(field.to_s, field_value_options(field.controlled_vocabulary), 
                {:include_blank => field.name}, {:class => 'input-medium'})
    -elsif field.is_file == true
      %label 
        = field.name
      = f.file_field(field.to_s, :class => 'input-medium')
    -elsif field.associated_schema
      = f.select(field.to_s, associated_field_value_options(field.associated_schema), 
                {:include_blank => field.name}, {:class => 'input-medium',:id=>"c_"+field.to_s})
      :javascript
        $(document).ready(function() { $("#c_#{field.to_s}").select2(); });
    -elsif field.type.to_s == "Yogo::Collection::Property::Date"
      = f.text_field(field.to_s, :id=> "c_"+field.to_s, :placeholder => field.name, :class => 'input-medium') 
      :javascript
        $("#c_#{field.to_s}").datepicker({dateFormat:'yy-mm-dd'});
    -elsif field.type.to_s == "Yogo::Collection::Property::DateTime"
      = f.text_field(field.to_s, :id=> "c_"+field.to_s, :placeholder => field.name, :class => 'input-medium') 
      :javascript
        $("#c_#{field.to_s}").datetimepicker({dateFormat:'yy-mm-dd'});
    -elsif field.type.to_s == "Yogo::Collection::Property::Text"
      = f.text_field(field.to_s, :id=> field.to_s, :placeholder => field.name, :class => 'input-large', :rows => 4) 
    -elsif field.type.to_s == "Yogo::Collection::Property::Boolean"
      %label 
        = f.check_box(field.to_s, :id=> field.to_s, :class => 'input-medium') 
        = field.name
    
    -else
      = f.text_field(field.to_s, :placeholder => field.name, :class => 'input-medium') 
  -#= f.file_field(:file, :class => 'input-medium')
%button.btn-small.btn-primary{:id=>'save_button'} Save
#progress
  
:javascript
  function formfocus() {
    $('#QAcreateItemForm input:visible:first').focus();
  }
  function beforeSendHandler(){
    $('body').modalmanager('loading');
  }
  function completeHandler(){
    updateGrid(grid);
    $('#QAcreateItemForm')[0].reset();
    $('body').modalmanager('loading');
  }
  function errorHandler(data){
    alert("Error: " + data["errors"]);
  }
  function progressHandlingFunction(e){
      if(e.lengthComputable){
          $('progress').attr({value:e.loaded,max:e.total});
      }
  }
  window.onload = formfocus;
  $('#save_button').click(function() {  
      var valuesToSubmit = new FormData($('#QAcreateItemForm')[0]);//.serialize();
      $.ajax({
          url:$('#QAcreateItemForm').attr('action'),
          type: 'POST',
          beforeSend: beforeSendHandler,
          success:  completeHandler,
          data: valuesToSubmit,
          cache: false,
          contentType: false,
          processData: false,
          dataType: 'json'
     }).fail(function(data){alert("Error" + data["errors"]);});
  });
  