- collection.schema.each do |field|
  %label= field.name
  -if field.controlled_vocabulary
    = f.select(field.to_s, field_value_options(field.controlled_vocabulary), :include_blank => true)
  -elsif field.is_file == true
    -unless @item[field.name].nil?
      -json_string = JSON.parse(@item[field.name])
      %a.as-show(href='' data-toggle='modal' class='#{s.id.to_s}')= json_string['item']['display']
    =# f.select(field.to_s, associated_file_options(file_collection), :include_blank => true)
    = f.file_field(field.to_s, :class => 'input-medium')
  -elsif field.associated_schema
    :plain
      <input type="hidden" name="item[#{field.to_s}]"class="bigdrop" id="c_#{field.to_s}_1" style="width:150px"/>

    :javascript
      datas=""
      $(document).ready(function() { $("#c_#{field.to_s}").select2(); 
      $("#c_#{field.to_s}_1").select2({
                  placeholder: "#{field.name}",
                  minimumInputLength: 0,
                  ajax: {
                      url: "#{project_collection_associations_path(field.associated_schema.data_collection.project,field.associated_schema.data_collection,:schema_id=>field.associated_schema, :page=>1)}",
                      dataType: 'json',
                      quietMillis: 100,
                      data: function (term, page) { // page is the one-based page number tracked by Select2
                          return {
                              term: term, //search term
                              page: page, // page number
                          };
                      },
                      results: function (data, page) {
                        datas=data;
                          var more = (page * 30) < data.total; // whether or not there are more results available
                          return {results: data.items, more: more};
                      }
                  },
                  dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
                  escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
              });})
  -elsif field.type.to_s == "Yogo::Collection::Property::Date"
    = f.text_field(field.to_s, :id=> field.to_s) 
    :javascript
      $("##{field.to_s}").datepicker({dateFormat:'yy-mm-dd'});
  -elsif field.type.to_s == "Yogo::Collection::Property::DateTime"
    = f.text_field(field.to_s, :id=> field.to_s) 
    :javascript
      $("##{field.to_s}").datetimepicker({dateFormat:'yy-mm-dd'});
  -elsif field.type.to_s == "Yogo::Collection::Property::Text"
    = f.text_area(field.to_s, :id=> field.to_s, :placeholder => field.name, :class => 'input-large', :rows => 5) 
  -elsif field.type.to_s == "Yogo::Collection::Property::Boolean"
    %label 
      = f.check_box(field.to_s, :id=> field.to_s, :class => 'input-medium') 
      = field.name
  -else
    = f.text_field(field.to_s) 
